version: "3.7"

# Define services
services:
  # App backend service
  app-server:
  #  Configuration for building the docker image for the backend service
    build:
      context: twister-server # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/firstDataBase?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 25139+Yacine
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend
  # Frontend Service 
  app-client:
    build:
      context: react-app
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:8080/api
    ports:
      - "8000:80"
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend
  # Database Service (Mysql)
  db:
    build:
      context: my-sql
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    restart: always
    environment:
      ENV MYSQL_DATABASE: firstDataBase
      # ENV MYSQL_USER: ghiles
      # MYSQL_PASSWORD: 25139
      ENV MYSQL_ROOT_PASSWORD: 25139+Yacine
    command: --disable-partition-engine-check
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:
