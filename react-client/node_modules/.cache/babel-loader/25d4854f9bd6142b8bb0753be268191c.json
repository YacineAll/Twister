{"ast":null,"code":"var _jsxFileName = \"/home/melissa/Desktop/yacine/others/react/twister-client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { browserHistory } from \"react-router\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport { routerMiddleware } from 'react-router-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { loadState, saveState } from './localStorage'; // Apply the middleware to the store\n\nimport Routes from \"./routes\";\nimport reducers from \"./reducers\";\nconst persistedState = loadState();\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst middleware = routerMiddleware(browserHistory);\nconst createStoreWithMiddleware = applyMiddleware(thunk, middleware)(createStore);\nconst store = createStoreWithMiddleware(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst persistor = persistStore(store);\nconst history = syncHistoryWithStore(browserHistory, store);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Routes, {\n  history: history,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n})), document.querySelector(\".main\"));","map":{"version":3,"sources":["/home/melissa/Desktop/yacine/others/react/twister-client/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","thunk","browserHistory","syncHistoryWithStore","routerMiddleware","persistStore","persistReducer","storage","PersistGate","loadState","saveState","Routes","reducers","persistedState","persistConfig","key","persistedReducer","middleware","createStoreWithMiddleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","history","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,gBAAnC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,MAAMC,cAAc,GAAGJ,SAAS,EAAhC;AAEA,MAAMK,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBR,EAAAA;AAFoB,CAAtB;AAOA,MAAMS,gBAAgB,GAAGV,cAAc,CAACQ,aAAD,EAAgBF,QAAhB,CAAvC;AAGA,MAAMK,UAAU,GAAGb,gBAAgB,CAACF,cAAD,CAAnC;AACA,MAAMgB,yBAAyB,GAAGlB,eAAe,CAACC,KAAD,EAAOgB,UAAP,CAAf,CAAkClB,WAAlC,CAAlC;AAEA,MAAMoB,KAAK,GAAGD,yBAAyB,CACrCF,gBADqC,EAErCI,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFF,CAAvC;AAKA,MAAMC,SAAS,GAAGjB,YAAY,CAACc,KAAD,CAA9B;AAGA,MAAMI,OAAO,GAAGpB,oBAAoB,CAACD,cAAD,EAAiBiB,KAAjB,CAApC;AAEAtB,QAAQ,CAAC2B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADF,EAIEE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { browserHistory } from \"react-router\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport { routerMiddleware } from 'react-router-redux'\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport {loadState, saveState} from './localStorage'\n\n// Apply the middleware to the store\nimport Routes from \"./routes\";\nimport reducers from \"./reducers\";\n\n\nconst persistedState = loadState()\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\n\n\nconst persistedReducer = persistReducer(persistConfig, reducers)\n\n\nconst middleware = routerMiddleware(browserHistory)\nconst createStoreWithMiddleware = applyMiddleware(thunk,middleware)(createStore);\n\nconst store = createStoreWithMiddleware(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst persistor = persistStore(store);\n\n\nconst history = syncHistoryWithStore(browserHistory, store);\n\nReactDOM.render(\n  <Provider store={store}>\n      <Routes history={history} />\n  </Provider>,\n  document.querySelector(\".main\")\n);\n"]},"metadata":{},"sourceType":"module"}