{"ast":null,"code":"import axios from \"axios\";\nimport { push } from \"react-router-redux\";\nconst URL = \"http://localhost:8080/twister-server\";\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SIGNUP = \"SIGNUP\";\nexport function login(username, password) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"login\", username);\n    params.append(\"password\", password);\n    var request = {\n      params: params\n    };\n    axios.get(`${URL}/login`, request).then(async response => {\n      if (response.data.code === -1) {\n        const friendList = await getFriendList(response.data.Key);\n        const friendsComments = await getFriendsComments(response.data.Key);\n        dispatch(push({\n          pathname: \"/account\",\n          state: {\n            user: response.data,\n            friendList: friendList,\n            friendsComments: friendsComments\n          }\n        }));\n      }\n    }).catch(error => {\n      alert(\"error\");\n    });\n  };\n}\nexport function signup(name, lastname, email, password, sex, birthdate) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"nom\", name);\n    params.append(\"prenom\", lastname);\n    params.append(\"login\", email);\n    params.append(\"password\", password);\n    params.append(\"sex\", sex);\n    params.append(\"birth_date\", birthdate);\n    var request = {\n      params: params\n    };\n    axios.get(`${URL}/createUser`, request).then(response => {\n      if (response.data.code === -1) {\n        dispatch(push(\"/login\"));\n      }\n    }).catch(error => {\n      alert(\"error\");\n    });\n  };\n}\nexport function logout(key) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"key\", key);\n    var request = {\n      params: params\n    };\n    axios.get(`${URL}/logout`, request).then(response => {\n      dispatch({\n        type: LOGOUT,\n        payload: response.data\n      });\n\n      if (response.data.code === -1) {\n        dispatch(push({\n          pathname: \"/login\",\n          state: {}\n        }));\n      }\n    }).catch(error => {\n      alert(\"error\");\n    });\n  };\n}\n\nasync function getFriendList(key) {\n  var params = new URLSearchParams();\n  params.append(\"key\", key);\n  var request = {\n    params: params\n  };\n  let res = await axios.get(`${URL}/listerFriends`, request);\n\n  if (res.data.code === -1) {\n    return res.data;\n  }\n\n  return [];\n}\n\nasync function getFriendsComments(key) {\n  var params = new URLSearchParams();\n  params.append(\"key\", key);\n  var request = {\n    params: params\n  };\n  let res = await axios.get(`${URL}/friendsComments`, request);\n\n  if (res.data.code === -1) {\n    return res.data;\n  }\n\n  return [];\n}","map":{"version":3,"sources":["/home/melissa/Desktop/yacine/others/react/twister-client/src/actions/index.js"],"names":["axios","push","URL","LOGIN","LOGOUT","SIGNUP","login","username","password","dispatch","params","URLSearchParams","append","request","get","then","response","data","code","friendList","getFriendList","Key","friendsComments","getFriendsComments","pathname","state","user","catch","error","alert","signup","name","lastname","email","sex","birthdate","logout","key","type","payload","res"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { push } from \"react-router-redux\";\n\nconst URL = \"http://localhost:8080/twister-server\";\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SIGNUP = \"SIGNUP\";\n\nexport function login(username, password) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"login\", username);\n    params.append(\"password\", password);\n    var request = {\n      params: params,\n    };\n    axios\n      .get(`${URL}/login`, request)\n      .then(async (response) => {\n        if (response.data.code === -1) {\n          const friendList = await getFriendList(response.data.Key);\n          const friendsComments = await getFriendsComments(response.data.Key);\n\n          dispatch(\n            push({\n              pathname: \"/account\",\n              state: {\n                user: response.data,\n                friendList: friendList,\n                friendsComments: friendsComments,\n              },\n            })\n          );\n        }\n      })\n      .catch((error) => {\n        alert(\"error\");\n      });\n  };\n}\n\nexport function signup(name, lastname, email, password, sex, birthdate) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"nom\", name);\n    params.append(\"prenom\", lastname);\n    params.append(\"login\", email);\n    params.append(\"password\", password);\n    params.append(\"sex\", sex);\n    params.append(\"birth_date\", birthdate);\n    var request = {\n      params: params,\n    };\n    axios\n      .get(`${URL}/createUser`, request)\n      .then((response) => {\n        if (response.data.code === -1) {\n          dispatch(push(\"/login\"));\n        }\n      })\n      .catch((error) => {\n        alert(\"error\");\n      });\n  };\n}\n\nexport function logout(key) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"key\", key);\n    var request = {\n      params: params,\n    };\n    axios\n      .get(`${URL}/logout`, request)\n      .then((response) => {\n        dispatch({ type: LOGOUT, payload: response.data });\n        if (response.data.code === -1) {\n          dispatch(push({ pathname: \"/login\", state: {} }));\n        }\n      })\n      .catch((error) => {\n        alert(\"error\");\n      });\n  };\n}\n\nasync function getFriendList(key) {\n  var params = new URLSearchParams();\n  params.append(\"key\", key);\n  var request = {\n    params: params,\n  };\n  let res = await axios.get(`${URL}/listerFriends`, request);\n  if (res.data.code === -1) {\n    return res.data;\n  }\n  return [];\n}\n\nasync function getFriendsComments(key) {\n  var params = new URLSearchParams();\n  params.append(\"key\", key);\n  var request = {\n    params: params,\n  };\n  let res = await axios.get(`${URL}/friendsComments`, request);\n  if (res.data.code === -1) {\n    return res.data;\n  }\n  return [];\n}\n"]},"metadata":{},"sourceType":"module"}