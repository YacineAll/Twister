{"ast":null,"code":"import axios from \"axios\";\nimport { push } from \"react-router-redux\";\nconst URL = \"http://localhost:8080/twister-server\";\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SIGNUP = \"SIGNUP\";\nexport function login(username, password) {\n  console.log(getAPODpromise(\"response.data.Key\").then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n  }));\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"login\", username);\n    params.append(\"password\", password);\n    var request = {\n      params: params\n    };\n    axios.get(`${URL}/login`, request).then(response => {\n      if (response.data.code === -1) {\n        dispatch(push({\n          pathname: \"/account\",\n          state: {\n            user: response.data\n          }\n        }));\n      }\n    }).catch(error => {\n      alert(\"error\");\n    });\n  };\n}\nexport function signup(name, lastname, email, password, sex, birthdate) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"nom\", name);\n    params.append(\"prenom\", lastname);\n    params.append(\"login\", email);\n    params.append(\"password\", password);\n    params.append(\"sex\", sex);\n    params.append(\"birth_date\", birthdate);\n    var request = {\n      params: params\n    };\n    axios.get(`${URL}/createUser`, request).then(response => {\n      if (response.data.code === -1) {\n        dispatch(push(\"/login\"));\n      }\n    }).catch(error => {\n      alert(\"error\");\n    });\n  };\n}\nexport function logout(key) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"key\", key);\n    var request = {\n      params: params\n    };\n    axios.get(`${URL}/logout`, request).then(response => {\n      dispatch({\n        type: LOGOUT,\n        payload: response.data\n      });\n\n      if (response.data.code === -1) {\n        dispatch(push({\n          pathname: \"/login\",\n          state: {}\n        }));\n      }\n    }).catch(error => {\n      alert(\"error\");\n    });\n  };\n}\nconst apod = axios.create({\n  baseURL: `${URL}/listerFriends`\n});\n\nfunction getAPODpromise(key) {\n  var params = new URLSearchParams();\n  params.append(\"key\", key);\n  var request = {\n    params: params\n  };\n  return apod.get(\"\", request);\n}","map":{"version":3,"sources":["/home/melissa/Desktop/yacine/others/react/twister-client/src/actions/index.js"],"names":["axios","push","URL","LOGIN","LOGOUT","SIGNUP","login","username","password","console","log","getAPODpromise","then","response","data","catch","error","dispatch","params","URLSearchParams","append","request","get","code","pathname","state","user","alert","signup","name","lastname","email","sex","birthdate","logout","key","type","payload","apod","create","baseURL"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { push } from \"react-router-redux\";\n\nconst URL = \"http://localhost:8080/twister-server\";\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SIGNUP = \"SIGNUP\";\n\nexport function login(username, password) {\n  console.log(\n    getAPODpromise(\"response.data.Key\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  );\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"login\", username);\n    params.append(\"password\", password);\n    var request = {\n      params: params,\n    };\n    axios\n      .get(`${URL}/login`, request)\n      .then((response) => {\n        if (response.data.code === -1) {\n          dispatch(\n            push({ pathname: \"/account\", state: { user: response.data } })\n          );\n        }\n      })\n      .catch((error) => {\n        alert(\"error\");\n      });\n  };\n}\n\nexport function signup(name, lastname, email, password, sex, birthdate) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"nom\", name);\n    params.append(\"prenom\", lastname);\n    params.append(\"login\", email);\n    params.append(\"password\", password);\n    params.append(\"sex\", sex);\n    params.append(\"birth_date\", birthdate);\n    var request = {\n      params: params,\n    };\n    axios\n      .get(`${URL}/createUser`, request)\n      .then((response) => {\n        if (response.data.code === -1) {\n          dispatch(push(\"/login\"));\n        }\n      })\n      .catch((error) => {\n        alert(\"error\");\n      });\n  };\n}\n\nexport function logout(key) {\n  return function (dispatch) {\n    var params = new URLSearchParams();\n    params.append(\"key\", key);\n    var request = {\n      params: params,\n    };\n    axios\n      .get(`${URL}/logout`, request)\n      .then((response) => {\n        dispatch({ type: LOGOUT, payload: response.data });\n        if (response.data.code === -1) {\n          dispatch(push({ pathname: \"/login\", state: {} }));\n        }\n      })\n      .catch((error) => {\n        alert(\"error\");\n      });\n  };\n}\n\nconst apod = axios.create({\n  baseURL: `${URL}/listerFriends`,\n});\n\nfunction getAPODpromise(key) {\n  var params = new URLSearchParams();\n  params.append(\"key\", key);\n  var request = {\n    params: params,\n  };\n  return apod.get(\"\", request);\n}\n"]},"metadata":{},"sourceType":"module"}